{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Searchbar/Searchbar.jsx","components/Modal/Modal.jsx","services/images-api.jsx","components/Button/Button.jsx","components/App.jsx","services/scroll.jsx","index.js"],"names":["ImageGalleryItem","id","tags","image","onClick","className","src","alt","ImageGallery","onSelect","map","webformatURL","largeImageURL","Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","this","type","onChange","autoComplete","autoFocus","placeholder","React","Component","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","srcImg","altImg","createPortal","width","height","imagesAPI","fetchImages","page","console","log","fetch","then","response","ok","json","Promise","refect","Error","Button","Status","App","error","status","selectedImg","loadNextPage","prevState","newQuery","handleSelectedImg","closeModal","selectedImage","prevProps","newPage","hits","catch","scrollTo","top","documentElement","scrollHeight","behavior","color","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ccd10dd1.chunk.js","sourcesContent":["import '../style.css';\r\nimport PropTypes from 'prop-types';\r\nexport const ImageGalleryItem = ({id,tags,image,onClick}) => {\r\n    \r\n    return (\r\n        <li key={id} className=\"ImageGalleryItem\" >\r\n            <img\r\n                src={image}\r\n                alt={tags}\r\n                className=\"ImageGalleryItem-image\"\r\n                onClick={onClick}/>\r\n        </li> )\r\n            }\r\nImageGalleryItem.propTypes = {\r\n    image: PropTypes.string.isRequired,\r\n  id: PropTypes.number,\r\n  tags: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n}","import '../style.css';\r\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport PropTypes from 'prop-types';\r\n  \r\nexport default function ImageGallery({ image, onSelect }) {\r\n    return (<ul className=\"ImageGallery\">\r\n        {image.map(({ id, webformatURL, tags, largeImageURL }) =>\r\n            <ImageGalleryItem\r\n                id={id}\r\n                tags={tags}\r\n                image={webformatURL}\r\n                largeImageURL={largeImageURL} \r\n                onClick={() => onSelect({ largeImageURL, tags } )}/>\r\n        )}\r\n        </ul>)\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      largeImageURL: PropTypes.string,\r\n      image: PropTypes.string,\r\n      tags: PropTypes.string,\r\n    }),\r\n  ),\r\n  onSelect: PropTypes.func.isRequired,\r\n}","import '../style.css';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Searchbar extends React.Component {\r\n  state = {\r\n    query: ''\r\n    }\r\nhandleChange = event => {\r\n    this.setState({\r\n      query: event.currentTarget.value,\r\n    })\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n      this.props.onSubmit(this.state.query)\r\n    this.reset()\r\n  }\r\n  reset = () => {\r\n      this.setState({ query: '' })\r\n  }\r\n  render() {\r\n    return <header className=\"Searchbar\">\r\n  <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n    <button type=\"submit\" className=\"SearchForm-button\" >\r\n      <span className=\"SearchForm-button-label\">Search</span>\r\n    </button>\r\n\r\n    <input\r\n       onChange={this.handleChange}\r\n       value={this.state.query}\r\n      className=\"SearchForm-input\"\r\n      type=\"text\"\r\n      autoComplete=\"off\"\r\n      autoFocus\r\n      placeholder=\"Search images and photos\"\r\n    />\r\n  </form>\r\n</header>\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    query: PropTypes.string.isRequired\r\n}\r\n\r\n\r\n","import '../style.css';\r\nimport React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n      const { srcImg, altImg } = this.props;\r\n      return createPortal(\r\n        <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img width=\"800\" height=\"600\"  src={srcImg} alt={altImg} />\r\n          </div>\r\n         </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n    srcImg: PropTypes.string.isRequired,\r\n  altImg: PropTypes.string.isRequired\r\n}\r\n\r\n\r\n","function fetchImages(query, page) {\r\n    console.log(page)\r\n    return fetch(`https://pixabay.com/api/?key=16471285-08281fa67152cd8514adcae08&q=${query}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=12`).then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        return Promise.refect(new Error('EROR'))\r\n    })\r\n}\r\nconst imagesAPI = {\r\n    fetchImages\r\n}\r\nexport default imagesAPI","import '../style.css';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n  export const Button = ({ onClick }) => (\r\n  <button  className=\"Button\" type=\"button\" onClick={onClick}>\r\n    Load more\r\n  </button>\r\n);\r\n\r\n            \r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};","import './style.css';\nimport React from 'react';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Searchbar from './Searchbar/Searchbar';\nimport Modal from './Modal/Modal';\nimport imagesAPI from '../services/images-api';\nimport { scroll } from '../services/scroll';\nimport { Button } from './Button/Button';\nimport Loader from \"react-loader-spinner\";\n\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default class App extends React.Component {\n  state = {\n    query: '',\n    image: [],\n    error: null,\n    page: 1,\n    status: Status.IDLE,\n    selectedImg: null,\n  };\n    \n  componentDidUpdate(prevProps, prevState) {\n    const newQuery = this.state.query\n    const newPage = this.state.page\n\n    if (prevState.query !== this.state.query || prevState.page !== this.state.page) {\n      this.setState({ status: Status.PENDING });\n      imagesAPI.fetchImages(newQuery, newPage)\n        .then(image => this.setState({\n          status: Status.RESOLVED,\n          image: [...this.state.image, ...image.hits]\n        }))\n        .catch(error => this.setState({ error, status: Status.REJECTED }));\n    }\n    scroll()\n  }\n  \n  loadNextPage = () => {\n    this.setState((prevState) => ({\n      page: prevState.page + 1\n    })\n    )}\n  newQuery = query => {\n    this.setState({ query })\n  }\n  handleSelectedImg = (selectedImg) => {\n    this.setState({ selectedImg });\n  }\n   closeModal = selectedImage => {\n    this.setState({ selectedImg: null });\n  }\n  render() {\n    const { status, query, image, selectedImg } = this.state;\n    return (<div><Searchbar query={query} onSubmit={this.newQuery} />\n      {status === Status.PENDING &&  <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000} \n      />}\n        {status === Status.IDLE &&  <div>Введите запрос в поиск.</div>}\n      {status === Status.REJECTED && <div>Ошибка</div>}\n      {status === Status.RESOLVED && <div> <ImageGallery image={image} onSelect={this.handleSelectedImg}/>\n        <Button onClick={this.loadNextPage} />\n      {selectedImg && (\n          <Modal\n            srcImg={selectedImg.largeImageURL}\n            altImg={selectedImg.tags}\n            onClose={this.closeModal}\n          />\n        )}\n      </div>\n      }\n         </div>)\n    \n  }\n}","export const scroll = () => {\r\n  return window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: 'smooth',\r\n  });\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}