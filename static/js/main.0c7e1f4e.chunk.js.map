{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Searchbar/Searchbar.jsx","components/Modal/Modal.jsx","services/images-api.jsx","components/Button/Button.jsx","components/App.jsx","services/scroll.jsx","index.js"],"names":["ImageGalleryItem","id","tags","image","onClick","className","src","alt","ImageGallery","onSelect","map","webformatURL","largeImageURL","Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","target","elements","props","onSubmit","reset","this","type","onChange","name","autoComplete","autoFocus","placeholder","React","Component","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","window","addEventListener","removeEventListener","srcImg","altImg","createPortal","width","height","imagesAPI","fetchImages","page","fetch","then","response","ok","json","Promise","refect","Error","Button","Status","App","status","selectedImg","loadNextPage","prevState","newQuery","handleSelectedImg","closeModal","prevProps","newPage","hits","catch","error","scrollTo","top","documentElement","scrollHeight","behavior","color","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c7e1f4e.chunk.js","sourcesContent":["import '../style.css';\r\nimport PropTypes from 'prop-types';\r\nexport const ImageGalleryItem = ({id,tags,image,onClick}) => {\r\n    \r\n    return (\r\n        <li key={id} className=\"ImageGalleryItem\" >\r\n            <img\r\n                src={image}\r\n                alt={tags}\r\n                className=\"ImageGalleryItem-image\"\r\n                onClick={onClick}/>\r\n        </li> )\r\n            }\r\nImageGalleryItem.propTypes = {\r\n    image: PropTypes.string.isRequired,\r\n  id: PropTypes.number,\r\n  tags: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n}","import '../style.css';\r\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport PropTypes from 'prop-types';\r\n  \r\nexport default function ImageGallery({ image, onSelect }) {\r\n    return (<ul className=\"ImageGallery\">\r\n        {image.map(({ id, webformatURL, tags, largeImageURL }) =>\r\n            <ImageGalleryItem\r\n                id={id}\r\n                tags={tags}\r\n                image={webformatURL}\r\n                largeImageURL={largeImageURL} \r\n                onClick={() => onSelect({ largeImageURL, tags } )}/>\r\n        )}\r\n        </ul>)\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      largeImageURL: PropTypes.string,\r\n      image: PropTypes.string,\r\n      tags: PropTypes.string,\r\n    }),\r\n  ),\r\n  onSelect: PropTypes.func.isRequired,\r\n}","import '../style.css';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Searchbar extends React.Component {\r\n  state = {\r\n    query: ''\r\n    }\r\nhandleChange = event => {\r\n    this.setState({\r\n      query: event.currentTarget.value,\r\n    })\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    if (event.target.elements.query.value === \"\") {\r\n      return\r\n    }\r\n      this.props.onSubmit(this.state.query)\r\n    this.reset()\r\n  }\r\n  reset = () => {\r\n      this.setState({ query: '' })\r\n  }\r\n  render() {\r\n    return <header className=\"Searchbar\">\r\n  <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n    <button type=\"submit\" className=\"SearchForm-button\" >\r\n      <span className=\"SearchForm-button-label\">Search</span>\r\n    </button>\r\n\r\n    <input\r\n       onChange={this.handleChange}\r\n          value={this.state.query}\r\n          name = 'query'\r\n      className=\"SearchForm-input\"\r\n      type=\"text\"\r\n      autoComplete=\"off\"\r\n      autoFocus\r\n      placeholder=\"Search images and photos\"\r\n    />\r\n  </form>\r\n</header>\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    query: PropTypes.string.isRequired\r\n}\r\n\r\n\r\n","import '../style.css';\r\nimport React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }};\r\n\r\n  render() {\r\n      const { srcImg, altImg } = this.props;\r\n      return createPortal(\r\n        <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img width=\"800\" height=\"600\"  src={srcImg} alt={altImg} />\r\n          </div>\r\n         </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n    srcImg: PropTypes.string.isRequired,\r\n  altImg: PropTypes.string.isRequired\r\n}\r\n\r\n\r\n","function fetchImages(query, page) {\r\n    return fetch(`https://pixabay.com/api/?key=16471285-08281fa67152cd8514adcae08&q=${query}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=12`).then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        return Promise.refect(new Error('EROR'))\r\n    })\r\n}\r\nconst imagesAPI = {\r\n    fetchImages\r\n}\r\nexport default imagesAPI","import '../style.css';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n  export const Button = ({ onClick }) => (\r\n  <button  className=\"Button\" type=\"button\" onClick={onClick}>\r\n    Load more\r\n  </button>\r\n);\r\n\r\n            \r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};","import './style.css';\nimport React from 'react';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Searchbar from './Searchbar/Searchbar';\nimport Modal from './Modal/Modal';\nimport imagesAPI from '../services/images-api';\nimport { scroll } from '../services/scroll';\nimport { Button } from './Button/Button';\nimport Loader from \"react-loader-spinner\";\n\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default class App extends React.Component {\n  state = {\n    query: '',\n    image: [],\n    page: 1,\n    status: Status.IDLE,\n    selectedImg: null,\n  };\n    \n  componentDidUpdate(prevProps, prevState) {\n    const newQuery = this.state.query\n    const newPage = this.state.page\n     \n    if (prevState.query !== newQuery || prevState.page !== newPage) {\n      this.setState({\n        status: Status.PENDING,\n        image: [...this.state.image]\n      });\n      if (prevState.query !== newQuery) {\n         this.setState({\n        image: []\n      });\n      }\n      imagesAPI.fetchImages(newQuery, newPage)\n        .then(image => this.setState({\n          status: Status.RESOLVED,\n          image: [...this.state.image, ...image.hits]\n        }))\n        .catch(error => this.setState({error, status: Status.REJECTED }))\n    };\n    scroll()\n    };\n  \n    loadNextPage = () => {\n      this.setState((prevState) => ({\n        page: prevState.page + 1\n      })\n      )\n    };\n    newQuery = query => {\n      this.setState({\n        query,\n        page: 1\n      })\n    };\n    handleSelectedImg = (selectedImg) => {\n      this.setState({ selectedImg });\n    };\n    closeModal = ()=> {\n      this.setState({ selectedImg: null });\n    };\n    \n  render() {\n    const { status, query, image, selectedImg } = this.state;\n    return (<div> <Searchbar query={query} onSubmit={this.newQuery} />\n      {status === Status.IDLE && <div className=\"Message\">Введите запрос в поиск.</div>}\n      {status === Status.PENDING && <div className=\"Wrapper\">\n        <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} margin-top={150} />\n        <ImageGallery image={image} onSelect={this.handleSelectedImg}> </ImageGallery>\n      </div>}\n      \n      {status === Status.RESOLVED && <div>\n        <ImageGallery image={image} onSelect={this.handleSelectedImg} />\n        {this.state.image.length !== 0 && <Button onClick={this.loadNextPage} />}\n      {this.state.image.length === 0  &&\n        <div className=\"Message\">Не удалось найти изображений по даному запросу</div>}\n      </div>}\n     \n      {selectedImg && (\n        <Modal\n          srcImg={selectedImg.largeImageURL}\n          altImg={selectedImg.tags}\n          onClose={this.closeModal}\n        />)}\n    </div>)\n  }\n}","export const scroll = () => {\r\n  return window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: 'smooth',\r\n  });\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}